# Generated by Django 3.0.3 on 2021-01-14 19:21

import api.models.model_interfaces
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import rules.contrib.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('api', '0008_auto_20210114_2021'),
    ]

    operations = [
        migrations.CreateModel(
            name='PokerVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('FIN', 'Finished'), ('WAIT', 'Waiting'), ('SKIP', 'Skipped'), ('NS', 'not started')], default='NS', help_text='This represents the status of the vote.', max_length=4)),
            ],
            options={
                'verbose_name': 'PokerVote',
                'verbose_name_plural': 'PokerVotes',
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model, api.models.model_interfaces.IGetProject),
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storypoints', models.IntegerField(default=0, help_text='Storypoints the user voted for the PokerVote')),
                ('poker_vote', models.ForeignKey(help_text='The PokerVote this Vote belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='planning_poker.PokerVote')),
                ('user', models.ForeignKey(help_text='The project this PokerVoting belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='votes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vote',
                'verbose_name_plural': 'Votes',
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model, api.models.model_interfaces.IGetProject),
        ),
        migrations.CreateModel(
            name='PokerVoting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateField(blank=True, help_text='Begin of the project', null=True)),
                ('end', models.DateField(blank=True, help_text='End of the project', null=True)),
                ('mode', models.CharField(choices=[('ASYNC', 'Asynchronous'), ('SYNC', 'Synchronous')], default='ASYNC', help_text='This represents the type of the voting.', max_length=5)),
                ('manager', models.ForeignKey(blank=True, help_text='The project this PokerVoting belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='poker_voting_managers', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(help_text='The project this PokerVoting belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='poker_votings', to='api.Project')),
                ('voters', models.ManyToManyField(help_text='The project this PokerVoting belongs to', related_name='poker_voting_voters', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'PokerVoting',
                'verbose_name_plural': 'PokerVotings',
            },
            bases=(rules.contrib.models.RulesModelMixin, models.Model, api.models.model_interfaces.IGetProject),
        ),
        migrations.AddField(
            model_name='pokervote',
            name='poker_voting',
            field=models.ForeignKey(help_text='The PokerVoting this PokerVoter belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='poker_votes', to='planning_poker.PokerVoting'),
        ),
        migrations.AddField(
            model_name='pokervote',
            name='task',
            field=models.ForeignKey(blank=True, help_text='The PokerVoting this PokerVoter belongs to', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='poker_votes', to='api.Task'),
        ),
    ]
