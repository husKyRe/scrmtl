name: build and test frontend for NEXT
on:
  push:
    branches:
      - next

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: scrmtl-server:$(date +%s)

jobs:
  #backend job
  backendServer:
    name: 'build and test backend'
    runs-on: ubuntu-latest
    # Steps to deploy
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false
    

  #Frontend job
  # frontendServer:
  #   name: 'build and test frontend'
  #   runs-on: ubuntu-latest
  #   needs: backendServer
  #   steps:
  #   - name: Build
  #     # Run a multi-line script|
  #     run: |
  #       npm install
  #   - name: 'Run Jest'
  #     uses: stefanoeb/jest-action@1.0.3
  #     with:
  #       # Args to jest
  #       jestArgs: frontend/tests/unit/example.spec.js   
  #   - name: 'Unit Test'
  #     run: |
  #       npm install --progress=false
  #       npm run test:unit
  
  # deploy to github docker registry
        
  deploy:
    name: 'build docker and deploy'
    runs-on: ubuntu-latest
    # needs: [backendServer, frontendServer]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false
        
    - name: 'Build the Docker image'
      run: docker build . --file Dockerfile --tag $IMAGE_NAME

    - name: 'Log into registry'
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: 'Push image'
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
        
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

        # Use Docker `latest` tag convention
        [ "$VERSION" == "master" ] && VERSION=latest

        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION

        docker tag image $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION

      
