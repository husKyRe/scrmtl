name: Deployment Pipeline on Next Branch
on:
  push:
    branches:
      - next

env:
  # Image's name
  IMAGE_BACKEND_NAME: scrmtl-backend
  IMAGE_FRONTEND_NAME: scrmtl-frontend
  WORK_DIR_BACKEND: ./backend/scrumtool

jobs:
  #backend job
  backendServer:
    name: Commit Stage - build and test backend
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        python-version: [3.8.6]
    
    # Steps to deploy
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
      working-directory: ${{ env.WORK_DIR_BACKEND }}
    - name: Run Tests
      run: |
        python manage.py test
      working-directory: ${{ env.WORK_DIR_BACKEND }}
    
# deploy to github docker registry
       
  deployBackend:
    name: Release Stage - Build and deploy backend container
    runs-on: ubuntu-latest
    needs: backendServer
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Docker Build & Push to GitHub Package
      uses: opspresso/action-docker@master
      with:
        args: --docker
      env:
        USERNAME: ${{ github.actor }}
        PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        REGISTRY: "docker.pkg.github.com"
        DOCKERFILE: "Dockerfile.backend"
        IMAGE_NAME: ${{env.IMAGE_BACKEND_NAME}}
        LATEST: "true"
    
  deployFrontend:
    name: Release Stage - Build and deploy frontend container
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        persist-credentials: false

    - name: Docker Build & Push to GitHub Package
      uses: opspresso/action-docker@master
      with:
        args: --docker
      env:
        USERNAME: ${{ github.actor }}
        PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        REGISTRY: "docker.pkg.github.com"
        DOCKERFILE: "Dockerfile.frontend"
        IMAGE_NAME: ${{env.IMAGE_FRONTEND_NAME}}
        LATEST: "true"

      
